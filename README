# Worko Backend API

This repository contains the backend API for the Worko application. It is built using Node.js, Express.js, MongoDB, and provides basic authentication for all APIs.

## Table of Contents

- [Features](#features)
- [Live Demo](#live-demo)
- [Prerequisites](#prerequisites)
- [Installation](#installation)
- [Configuration](#configuration)
- [Running the Server](#running-the-server)
- [Endpoints](#endpoints)
- [Authentication](#authentication)
- [Testing](#testing)

## Live Demo ðŸ”´

The Hosted backend link - https://worko-ai-backend.onrender.com/

## Features

- CRUD operations for managing users (`GET`, `POST`, `PUT`, `PATCH`, `DELETE`).
- Basic authentication using username and password with JWT.
- MongoDB database integration.
- Error handling middleware.
- Unit testing framework setup.

## Prerequisites

Make sure you have the following installed:

- Node.js (v12 or higher)
- MongoDB

## Installation

1. Clone the repository:

   ```bash
   git clone https://github.com/yourusername/worko-backend.git
   cd worko-backend
   ```

2. Install dependencies:

npm install
Create a .env file in the root directory and add the following:

```
PORT=3000
DB_URI=mongodb://localhost:27017/worko
JWT_SECRET=your_jwt_secret
```

Replace your_jwt_secret with appropriate values.

3. Configuration

Ensure MongoDB is running and accessible. Modify .env file for database URI (DB_URI), JWT secret (JWT_SECRET), authentication username (AUTH_USERNAME), and password (AUTH_PASSWORD).

4. Running the Server
   Start the server with:

```
npm start
```

The server will run on http://localhost:3000 by default. You can change the port in the .env file.

## Endpoints

```
GET /api/worko/user - List all users.
GET /api/worko/user/:userId - Get user details.
POST /api/worko/user - Create new user.
PUT /api/worko/user/:userId - Update user details.
PATCH /api/worko/user/:userId - Partially update user details.
DELETE /api/worko/user/:userId - Soft delete user.
```

## Testing

To run tests, use the following command:

```
npm test
```
